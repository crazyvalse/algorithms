log_format  mylogs  '$remote_addr @ $remote_user [$time_local] "$request" ';

server {
  listen 8080;
  server_name localhost;
  root   /usr/share/nginx/html;

  ############################ gzip START ###############################
  gzip  on;
  #压缩级别，1压缩比最小处理速度最快，9压缩比最大但处理最慢，同时也最消耗CPU,一般设置为3就可以了
  gzip_comp_level 3;
  # nginx 做前端代理时启用该选项，表示无论后端服务器的headers头返回什么信息，都无条件启用压缩
  gzip_proxied any;
  # 什么类型的页面或文档启用压缩
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
  # 最小压缩的页面，如果页面过于小，可能会越压越大，这里规定大于1K的页面才启用压缩
  gzip_min_length  1024;
  # 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流
  gzip_buffers 4 16k;
  gzip_static on;
  gzip_vary on;

  autoindex on;
  ############################ gzip END ###############################

  ############################ 缓存 START ###############################
  location / {
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

    if ($request_method = 'OPTIONS') {
      return 204;
    }

    if ($request_filename ~* .*\.(?:htm|html)$)
    {
      add_header Cache-Control 'max-age=0,private,no-store,must-revalidate';
      expires      0;
    }
    if ($request_filename ~* .*\.(?:js|css)$)
    {
      expires      max;
    }
    if ($request_filename ~* .*\.(?:jpg|jpeg|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$)
    {
      expires      max;
    }

    try_files $uri $uri/ /index.html;
  }
}
